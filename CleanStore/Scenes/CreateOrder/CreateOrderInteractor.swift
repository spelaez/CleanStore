//
//  CreateOrderInteractor.swift
//  CleanStore
//
//  Created by Santiago Peláez on 5/12/18.
//  Copyright (c) 2018 Santiago Peláez. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CreateOrderBusinessLogic {
    var shippingMethods: [String] { get }
    var orderToEdit: Order? { get }
    func formatExpirationDate(request: CreateOrder.FormatExpirationDate.Request)
    func createOrder(request: CreateOrder.CreateOrder.Request)
    func showOrderToEdit(request: CreateOrder.EditOrder.Request)
    func updateOrder(request: CreateOrder.UpdateOrder.Request)
}

protocol CreateOrderDataStore {
    var shippingMethods: [String] { get }
    var orderToEdit: Order? { get set }
}

class CreateOrderInteractor: CreateOrderBusinessLogic, CreateOrderDataStore {
    var presenter: CreateOrderPresentationLogic?
    var ordersWorker = OrdersWorker(ordersStore: OrdersMemStore())
    var orderToEdit: Order?
    var shippingMethods = [
        ShipmentMethod(speed: .Standard).toString(),
        ShipmentMethod(speed: .OneDay).toString(),
        ShipmentMethod(speed: .TwoDay).toString()
    ]
    
    // MARK: - Expiration date
    
    func formatExpirationDate(request: CreateOrder.FormatExpirationDate.Request) {
        let response = CreateOrder.FormatExpirationDate.Response(date: request.date)
        presenter?.presentExpirationDate(response: response)
    }
    
    // MARK: - Create order
    
    func createOrder(request: CreateOrder.CreateOrder.Request) {
        
    }
}
